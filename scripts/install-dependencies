#!/bin/bash
set -eu

## This script should die: https://bugs.launchpad.net/tripleo/+bug/1195046.

# generate ssh authentication keys if they don't exist
if [ ! -f ~/.ssh/id_rsa ]; then
  ssh-keygen -t rsa -N ""  -f ~/.ssh/id_rsa
fi

# make the local id_rsa.pub be in .ssh/authorized_keys before that is copied
# into images via local-config
if ! grep "$(cat ~/.ssh/id_rsa.pub)" ~/.ssh/authorized_keys >/dev/null; then
  cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys
fi

# Make sure permissions are correct for ssh authorized_keys file.
chmod 0600 ~/.ssh/authorized_keys

# packages
os=unsupported
if [ -f /etc/redhat-release ]; then
  if $(grep -Eqs 'Red Hat Enterprise Linux Server release 6|CentOS release 6' /etc/redhat-release); then
    if [ -f /etc/yum.repos.d/epel.repo ]; then
      echo EPEL repository is required to install python-pip for RHEL/CentOS.
      echo See http://fedoraproject.org/wiki/EPEL
       exit 1
    fi
  fi
  os=redhat
fi

if [ -f /etc/debian_version ]; then
  os=debian
fi

if [ -f /etc/SuSE-release ]; then
  os=suse
  # Need these in path for sudo service & usermod to work
  PATH=/sbin:/usr/sbin:$PATH
fi

if [ "$os" = "unsupported" ]; then
  echo This script has not been tested outside of Fedora, RHEL, and Ubuntu variants.
  echo Aborting.
fi

if [ "$os" = "debian" ]; then
  if $(grep -Eqs 'Ubuntu 12.04' /etc/lsb-release); then
    #adding Ubuntu Cloud Archive Repository only if not present : bug https://bugs.launchpad.net/tripleo/+bug/1212237
    #Ubuntu 12.04 has a too-old libvirt-bin but a newer one is present in the Ubuntu cloud archive.
    DEBIAN_FRONTEND=noninteractive sudo apt-get install --yes ubuntu-cloud-keyring
    (grep -Eqs "precise-updates/grizzly" /etc/apt/sources.list.d/cloud-archive.list) || echo 'deb http://ubuntu-cloud.archive.canonical.com/ubuntu precise-updates/grizzly main
' | sudo tee -a /etc/apt/sources.list.d/cloud-archive.list
  fi
  # packages
  sudo apt-get update
  DEBIAN_FRONTEND=noninteractive sudo apt-get install --yes python-lxml python-libvirt libvirt-bin qemu-utils qemu-system qemu-kvm git python-pip python-dev gcc python-virtualenv openvswitch-switch libssl-dev curl python-yaml parted lsb-release libxml2-dev libxslt1-dev

  sudo service libvirt-bin restart
fi

if [ "$os" = "redhat" ]; then
  # For RHEL/CentOS, python-pip is in EPEL
  sudo yum install -y python-lxml libvirt-python libvirt qemu-img qemu-kvm git python-pip openssl-devel python-devel gcc audit python-virtualenv openvswitch python-yaml net-tools redhat-lsb-core libxslt-devel

  sudo service libvirtd restart
  sudo service openvswitch restart
fi

if [ "$os" = "suse" ]; then
  # TODO: this is a bit fragile, and assumes openSUSE, not SLES
  suse_version=$(awk '/VERSION/ { print $3 }' /etc/SuSE-release)
  [ -f /etc/zypp/repos.d/Cloud_OpenStack_Master.repo ] || sudo zypper --non-interactive --gpg-auto-import-keys ar -f http://download.opensuse.org/repositories/Cloud:/OpenStack:/Master/openSUSE_$suse_version/Cloud:OpenStack:Master.repo
  sudo zypper --non-interactive install \
    python-lxml libvirt-python libvirt qemu-tools kvm git python-pip libopenssl-devel \
    python-devel gcc audit python-virtualenv openvswitch-switch python-PyYAML net-tools \
    lsb-release
  sudo service libvirtd restart
  sudo service openvswitch-switch restart
fi

setup-clienttools

# libvirtd group
LIBVIRTD_GROUP='libvirtd'

if [ "$(lsb_release -i -s)" = 'Debian' ]; then
    LIBVIRTD_GROUP='libvirt'
fi

grep $LIBVIRTD_GROUP /etc/group || sudo groupadd $LIBVIRTD_GROUP
if ! id | grep $LIBVIRTD_GROUP; then
   echo "adding $USER to group $LIBVIRTD_GROUP"
   sudo usermod -a -G $LIBVIRTD_GROUP $USER

   if [ "$os" = "redhat" -o "$os" = "suse" ]; then
       libvirtd_file=/etc/libvirt/libvirtd.conf
       if ! sudo grep  "^unix_sock_group" $libvirtd_file > /dev/null; then
           sudo sed -i 's/^#unix_sock_group.*/unix_sock_group = "libvirtd"/g' $libvirtd_file
           sudo sed -i 's/^#auth_unix_rw.*/auth_unix_rw = "none"/g' $libvirtd_file
           sudo sed -i 's/^#unix_sock_rw_perms.*/unix_sock_rw_perms = "0770"/g' $libvirtd_file
           sudo service libvirtd restart
       fi
   fi

   exec sudo su -l $USER -c "PATH=$PATH $0"
fi

echo "Check to see that you are in the $LIBVIRTD_GROUP group in your current shell before going on. You can check by running:"
echo
echo "id | grep $LIBVIRTD_GROUP"
echo
echo "If you are not, it's because this script added you. You can pick up the group by logging out and back in, or run:"
echo
echo "sudo su -l $USER"
