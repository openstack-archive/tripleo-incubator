#!/bin/bash
#
# Setup neutron for a new cloud.
#
# Assumes an OpenStack rc file has been sourced already to provide credentials
# and endpoint information.

set -eux
set -o pipefail

# Future work:
# Make this take options
# or perhaps eliminate it and describe it as raw commands in incubator.

# Start of DHCP range
ALLOCATION_START=$1
# End of DHCP range
ALLOCATION_END=$2
# Network CIDR
NETWORK_CIDR=$3
# Where to route traffic
NETWORK_GATEWAY=$4
# Where the metadata service is - ideally nova-bm would manage this:
# https://bugs.launchpad.net/tripleo/+bug/1239481
METADATA_SERVER=$5
# If non-empty create a provider network with this name otherwise create a
# virtual network and setup a router etc. The network will be flat unless
# $10 - the network tag - is non-empty, in which case a vlan network will be
# created.
PHYSICAL_NETWORK=${6:-""}
# Use custom DNS server (neutron's server IP is used by default)
NAMESERVER=${7:-""}
# Start of floating range
FLOATING_START=${8:-""}
# End of floating range
FLOATING_END=${9:-""}
# Floating CIDR
FLOATING_CIDR=${10:-""}
# VLAN tag for physical networks
PHYSICAL_NETWORK_TAG=${11:-""}
# Network name for VLANs
PHYSICAL_NETWORK_TAG_NAME=${12:-""}
# Route pushed out on subnet via DHCP e.g. 1.2.3.0/24 1.2.3.4
ADDITIONAL_ROUTE_PREFIX=${13:-""}
ADDITIONAL_ROUTE_VIA=${14:-""}

# Create command line parameters
if [ -n "$ALLOCATION_START" -a -n "$ALLOCATION_END" ] ; then
    ALLOCATION_POOL="start=${ALLOCATION_START},end=${ALLOCATION_END}"
fi

# Find the admin tenant.
TENANT_ID=$(keystone tenant-list | grep ' admin ' | awk '{print $2}')

if [ -n "$PHYSICAL_NETWORK" ] ; then
    # Underclouds
    if [ -n "$PHYSICAL_NETWORK_TAG" ]; then
        NET_NAME=$PHYSICAL_NETWORK_TAG_NAME
        NET_SEGMENT="--provider:segmentation_id $PHYSICAL_NETWORK_TAG"
        NET_TYPE=vlan
    else
        NET_NAME=$PHYSICAL_NETWORK
        NET_SEGMENT=
        NET_TYPE=flat
    fi
    NET_EXTRA="--tenant_id $TENANT_ID --provider:network_type $NET_TYPE --provider:physical_network $PHYSICAL_NETWORK $NET_SEGMENT"
    SUBNET_EXTRA="--tenant_id $TENANT_ID"
    if [ -n "$METADATA_SERVER" ]; then
        SUBNET_EXTRA="$SUBNET_EXTRA --host-route destination=169.254.169.254/32,nexthop=$METADATA_SERVER"
    fi
    if [ -n "$NET_SEGMENT" ]; then
        # Disable DHCP for tagged provider networks - at least for now all our
        # use cases do not need a DHCPd (public networks and enterprise
        # provider networks)
        SUBNET_EXTRA="$SUBNET_EXTRA --disable-dhcp"
    fi
else
    # Overclouds
    NET_NAME="default-net"
    NET_EXTRA="--shared"
    SUBNET_EXTRA=""
fi

if [ -n "$NAMESERVER" ] ; then
    SUBNET_EXTRA="$SUBNET_EXTRA --dns-nameservers list=true $NAMESERVER"
fi

NET_ID=$(neutron net-create $NET_NAME $NET_EXTRA | grep ' id ' | awk '{print $4}')
SUBNET_ID=$(neutron subnet-create --ip_version 4 \
    ${ALLOCATION_POOL:+--allocation-pool $ALLOCATION_POOL} \
    ${NETWORK_GATEWAY:+--gateway } \
    ${NETWORK_GATEWAY:---no-gateway} $NET_ID $NETWORK_CIDR \
    $SUBNET_EXTRA \
    ${ADDITIONAL_ROUTE_PREFIX:+--host-route destination=$ADDITIONAL_ROUTE_PREFIX,nexthop=$ADDITIONAL_ROUTE_VIA} \
    | grep ' id ' | awk '{print $4}')

if [ -z "$PHYSICAL_NETWORK" ] ; then
    neutron router-create default-router
    neutron router-interface-add default-router $SUBNET_ID
fi

# XXX(lifeless): So we really only have two modes in setup-neutron today - one
# network(bm), or one overlay network + provider network. We need to do better,
# but in the interim we apply the bare metal metadata to make a provider
# network and enable segmentation ids while preserving the existing CLI.
# This does require a 'datacentre' provider network mapping which we did not
# previously setup - so running new setup-neutron on old-cloud will fail -
# however thats ok: its eternal scripts running setup-neutron at all that
# we need to preserve.
if [ -n "$FLOATING_START" -a -n "$FLOATING_END" -a -n "$FLOATING_CIDR" ] ; then
    if [ -n "$PHYSICAL_NETWORK_TAG" ]; then
        # Tagged: we create a VLAN network
        neutron net-create ext-net --router:external=True \
            --provider:network_type vlan --tenant_id $TENANT_ID \
            --provider:segmentation_id $PHYSICAL_NETWORK_TAG \
            --provider:physical_network datacentre
        # NB: no subnets needed on ext-net-flat
    else
        neutron net-create ext-net --router:external=True \
            --provider:network_type flat --tenant_id $TENANT_ID \
            --provider:physical_network datacentre
    fi
    SUBNET_ID=$(neutron subnet-create ext-net $FLOATING_CIDR --disable-dhcp \
                --allocation-pool start=$FLOATING_START,end=$FLOATING_END)
    neutron router-gateway-set default-router ext-net
fi
