#!/bin/bash
set -eu

BASE=$(dirname $0)/../
BRIDGE_SUFFIX=${1:-''}
BRIDGE_INTERFACE=${2:-''}
BRIDGE_NAME=brbm$BRIDGE_SUFFIX

# Only add bridge if missing
if [[ -z "$(sudo ovs-vsctl list-br | grep ${BRIDGE_NAME}$)" ]]; then
  sudo ovs-vsctl add-br ${BRIDGE_NAME}
fi

# Only add the interface to the bridge if missing.
if [[ -n "${BRIDGE_INTERFACE}" &&
      -z "$(sudo ovs-vsctl list-ports ${BRIDGE_NAME} | grep ${BRIDGE_INTERFACE})" ]]; then

  # Original routes
  ROUTES=$(ip route list | grep ${BRIDGE_INTERFACE})
  CFG=$(ip addr show ${BRIDGE_INTERFACE} | awk '/inet / {$1="";$(NF)=""; print $0}')

  sudo ovs-vsctl add-port ${BRIDGE_NAME} ${BRIDGE_INTERFACE}

  if [[ -n "${CFG}" ]]; then
    sudo ip addr del dev ${BRIDGE_INTERFACE} ${CFG}
    sudo ip addr add dev ${BRIDGE_NAME} ${CFG}
  fi

  # Ensure we only set up the missing routes on the bridge
  ROUTES=${ROUTES//${BRIDGE_INTERFACE}/${BRIDGE_NAME}}
  ROUTES_NEW=$( (echo "${ROUTES}"; ip route list | grep ${BRIDGE_NAME} ) | sort | uniq -u)

  SAVEIFS=$IFS;
  IFS=$(echo -en "\n\b");
  for LINE in ${ROUTES_NEW}; do
    eval sudo ip route add $LINE
  done
  IFS=$SAVEIFS
fi

# remove bridge before replacing it.
(virsh net-list --persistent | grep "${BRIDGE_NAME} ") && virsh net-destroy ${BRIDGE_NAME}
(virsh net-list --inactive --persistent | grep "${BRIDGE_NAME} ") && virsh net-undefine ${BRIDGE_NAME}

virsh net-define <(sed s/brbm/$BRIDGE_NAME/ $BASE/templates/brbm.xml)
virsh net-autostart ${BRIDGE_NAME}
virsh net-start ${BRIDGE_NAME}

# start default if needed and configure it to autostart
default_net=$(sudo virsh net-list --all --persistent | grep default | awk 'BEGIN{OFS=":";} {print $2,$3}')
state=${default_net%%:*}
autostart=${default_net##*:}

if [ "$state" != "active" ]; then
  virsh net-start default
fi

if [ "$autostart" != "yes" ]; then
  virsh net-autostart default
fi

