#!/bin/bash
set -eu
set -o pipefail

CPU=$(jq -r '.nodes[0] | .cpu' $TE_DATAFILE)
if [ -n "$CPU" ]; then
    MEM=$(jq -r '.nodes[0] | .memory' $TE_DATAFILE)
    DISK=$(jq -r '.nodes[0] | .disk' $TE_DATAFILE)
    ARCH=$(jq -r '.nodes[0] | .arch' $TE_DATAFILE)
else
    CPU=$NODE_CPU
    MEM=$NODE_MEM
    DISK=$NODE_DISK
    ARCH=$NODE_ARCH
fi
MACS="$1"
SERVICE_HOST="$2"
PM_IPS="${3:-}"
PM_USERS="${4:-}"
PM_PASSWORDS="${5:-}"

# Perhaps make this always recreate the nodes for repeatability?
register-nodes $CPU $MEM $DISK "$MACS" $SERVICE_HOST "$PM_IPS" "$PM_USERS" "$PM_PASSWORDS"

deploy_kernel=$TRIPLEO_ROOT/deploy-ramdisk.kernel
deploy_ramdisk=$TRIPLEO_ROOT/deploy-ramdisk.initramfs
deploy_kernel_id=$(glance image-create --name bm-deploy-kernel --public \
    --disk-format aki < "$deploy_kernel" | awk ' / id / {print $4}')
deploy_ramdisk_id=$(glance image-create --name bm-deploy-ramdisk --public \
    --disk-format ari < "$deploy_ramdisk" | awk ' / id / {print $4}')

function cleanup_flavor () {
    local FLAVOR_NAME=${1:?"cleanup_flavor requires a flavor name"}
    if nova flavor-show "$FLAVOR_NAME" &> /dev/null; then
        nova flavor-delete "$FLAVOR_NAME"
    fi
}

# While we can't mix hypervisors, having non-baremetal flavors will just
# confuse things.
cleanup_flavor 'm1.tiny'
cleanup_flavor 'm1.small'
cleanup_flavor 'm1.medium'
cleanup_flavor 'm1.large'
cleanup_flavor 'm1.xlarge'

cleanup_flavor 'baremetal'
nova flavor-create baremetal auto $MEM $DISK $CPU
nova flavor-key baremetal set "cpu_arch"="$ARCH" \
    "baremetal:deploy_kernel_id"="$deploy_kernel_id" \
    "baremetal:deploy_ramdisk_id"="$deploy_ramdisk_id"
