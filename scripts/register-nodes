#!/bin/bash
set -eu

if [ -z "$1" ]; then
    echo "Ironic not supported, please specify service host as the first argument."
    exit 1
fi
if [ -z "$2" ]; then
    echo "A JSON file of node listing is required"
    exit 1
fi
NODES=$(jq . "$2")

deploy_kernel=$TRIPLEO_ROOT/deploy-ramdisk.kernel
deploy_ramdisk=$TRIPLEO_ROOT/deploy-ramdisk.initramfs
deploy_kernel_id=$(glance image-create --name bm-deploy-kernel --public \
    --disk-format aki < "$deploy_kernel" | awk ' / id / {print $4}')
deploy_ramdisk_id=$(glance image-create --name bm-deploy-ramdisk --public \
    --disk-format ari < "$deploy_ramdisk" | awk ' / id / {print $4}')

function cleanup_flavor () {
    local FLAVOR_NAME=${1:?"cleanup_flavor requires a flavor name"}
    if nova flavor-show "$FLAVOR_NAME" &> /dev/null; then
        nova flavor-delete "$FLAVOR_NAME"
    fi
}

# While we can't mix hypervisors, having non-baremetal flavors will just
# confuse things.
cleanup_flavor 'm1.tiny'
cleanup_flavor 'm1.small'
cleanup_flavor 'm1.medium'
cleanup_flavor 'm1.large'
cleanup_flavor 'm1.xlarge'

# Ensure nova's baremetal service has fully initialised before proceeding with real nodes
wait_for 60 10 nova baremetal-node-create devtest_canary 1 1 1 11:22:33:44:55:66
nova baremetal-node-delete $(nova baremetal-node-list | awk '/devtest_canary/ {print $2}')

node_count=$(($(jq length <<< $NODES) - 1))
for pos in $(seq 0 $node_count); do
    cleanup_flavor baremetal${pos}
    nova flavor-create baremetal${pos} auto $(jq -r ".[$pos][\"memory\"] .[$pos][\"disk\"] .[$pos][\"cpu\"]" <<< $NODES)
    nova flavor-key baremetal${pos} set "cpu_arch"=$(jq .[$pos][\"arch\"] <<< $NODES) \
        "baremetal:deploy_kernel_id"="$deploy_kernel_id" \
        "baremetal:deploy_ramdisk_id"="$deploy_ramdisk_id"
    id=$(nova baremetal-node-create $SERVICE_HOST $(jq -r "\"--pm-addresses=\" + .[$pos][\"pm_addr\"] + \" --pm_user=\" + .[$pos][\"pm_user\"] + \" --pm_password=\" + .[$pos][\"pm_password\"] + " " + .[$pos][\"cpu\"] + " " + .[$pos][\"memory\"] + " " + .[$pos][\"disk\"] + " " + .[$pos][\"mac\"][0]" <<< $NODES) | awk '/ id / {print $4}')
    for mac in $(jq .[$pos][\"mac\"] - .[$pos][\"mac\"][0]); do
        nova baremetal-interface-add $id $mac
    done
done

date
echo "Nodes will be available in 60 seconds from now."
