#!/bin/bash
#
# Copyright 2013 Red Hat
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

set -eu
set -o pipefail

SCRIPT_NAME=$(basename $0)
SCRIPT_HOME=$(dirname $0)

function show_options () {
    echo "Usage: $SCRIPT_NAME [options] device[,device...] host [host ...]"
    echo
    echo "Generate swift ring file and distribute it to swift hosts"
    echo
    echo "This will create swift ring files containing all of the devices stored listed"
    echo "and distribute it to all of the hosts listed"
    echo
    echo "Options:"
    echo "    -p, --part-power  -- Override the default ring partition power '18'."
    echo "    -r, --replicas    -- Override the default number of replicas '1'."
    echo
    echo "For instance: $SCRIPT_NAME 'r1z1-192.0.2.1:%PORT%/d1' 192.0.2.1"
    exit $1
}

TEMP=`getopt -o "h" -l "part-power:,replicas:" -n $SCRIPT_NAME -- "$@"`
if [ $? != 0 ] ; then echo "Terminating..." >&2 ; exit 1 ; fi

# Note the quotes around `$TEMP': they are essential!
eval set -- "$TEMP"

PARTPOWER=18
REPLICAS=1

while true ; do
    case "$1" in
        -h) show_options 0;;
        --part-power) PARTPOWER=$2 ; shift 2;;
        --replicas) REPLICAS=$2 ; shift 2;;
        --) shift ; break ;;
        *) echo "Error: unsupported option $1." ; exit 1 ;;
    esac
done

DEVICES=$1 ; shift

# We don't have swift-ring-builder on the host so generating the ring file on the host
SCRIPT="swift-ring-builder /etc/swift/object.builder create $PARTPOWER $REPLICAS 1 ;
        swift-ring-builder /etc/swift/container.builder create $PARTPOWER $REPLICAS 1 ;
        swift-ring-builder /etc/swift/account.builder create $PARTPOWER $REPLICAS 1 ;"

for DEVICE in ${DEVICES/,/ } ; do
    SCRIPT="$SCRIPT swift-ring-builder /etc/swift/object.builder add ${DEVICE/\%PORT\%/6000} 100 ; "
    SCRIPT="$SCRIPT swift-ring-builder /etc/swift/container.builder add ${DEVICE/\%PORT\%/6001} 100 ; "
    SCRIPT="$SCRIPT swift-ring-builder /etc/swift/account.builder add ${DEVICE/\%PORT\%/6002} 100 ; "
done

SCRIPT="$SCRIPT
        swift-ring-builder /etc/swift/object.builder rebalance ;
        swift-ring-builder /etc/swift/container.builder rebalance ;
        swift-ring-builder /etc/swift/account.builder rebalance ; "

# Generate the ringfile on each host, ideally we would only need to do this once but swift-ring-builder is not
# installed on the this host
for HOST in $@ ; do
    echo $SCRIPT | ssh -o StrictHostKeyChecking=no -t heat-admin@$HOST sudo bash -x
done
